function duallistbox(e){e.previousElementSibling&&e.previousElementSibling.id==="duallistbox_"+e.id&&e.previousElementSibling.remove(),e.style.display="none",e.querySelectorAll("option").forEach((e,t)=>e.dataset.index=t);const t=e=>`<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" width="1.375em" height="1.375em" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="${e}"/></svg>`,n=t("M13 17l5-5-5-5M6 17l5-5-5-5"),o=t("M11 17l-5-5 5-5M18 17l-5-5 5-5"),l=`\n          <div class="duallistbox row" id="duallistbox_${e.id}">\n            <div class="col">\n              <input type="text" class="form-control form-control-sm" placeholder="Filter">\n              <select class="form-control" id="${e.id}_1" multiple></select>\n            </div>\n            <div class="col-md-1 d-flex align-items-center justify-content-center">\n              <div class="btn-group-sm btn-group-vertical d-none d-md-inline-flex" role="group">\n                <button class="btn btn-light move-all" type="button" title="Move all">${n}</button>\n                <button class="btn btn-light remove-all" type="button" title="Remove all">${o}</button>\n              </div>\n              <div class="btn-group-sm btn-group d-md-none my-1" role="group">\n                <button class="btn btn-light move-all" type="button">Move all</button>\n                <button class="btn btn-light remove-all" type="button">Remove all</button>\n              </div>\n            </div>\n            <div class="col">\n              <input type="text" class="form-control form-control-sm" placeholder="Filter">\n              <select class="form-control" id="${e.id}_2" multiple></select>\n            </div>\n          </div>\n        `;e.insertAdjacentHTML("beforebegin",l);const i=document.getElementById("duallistbox_"+e.id),s=document.getElementById(e.id+"_1"),r=document.getElementById(e.id+"_2"),d=i.querySelectorAll("input");s.innerHTML=[...e.querySelectorAll("option:not(:checked)")].map(e=>e.outerHTML).join(""),r.innerHTML=[...e.querySelectorAll("option:checked")].map(e=>e.outerHTML).join("").replace(/selected=""/g,"");const c=(e="")=>{if(""!==e){const t=e.nextElementSibling.querySelectorAll("option");t.forEach(e=>e.removeAttribute("hidden")),t.forEach(t=>{-1===t.textContent.toLowerCase().indexOf(e.value.toLowerCase())&&t.setAttribute("hidden",!0)})}else d.forEach(e=>c(e))};d.forEach(e=>e.addEventListener("keyup",()=>c(e)));const a=(e,t,n=!0)=>{const o=n?e.querySelectorAll("option:not([hidden]):not([disabled])"):e.selectedOptions;t.insertAdjacentHTML("beforeend",[...o].map(e=>(e.remove(),e.outerHTML)).join("")),[s,r].forEach(e=>{e.innerHTML=[...e.options].sort((e,t)=>e.dataset.index-t.dataset.index).map(e=>e.outerHTML).join("")}),m()};s.addEventListener("change",()=>a(s,r,!1)),r.addEventListener("change",()=>a(r,s,!1));const u=e=>{e?a(s,r,!0):a(r,s,!0),c()};i.addEventListener("click",e=>{e.target.closest(".move-all")&&u(!0),e.target.closest(".remove-all")&&u(!1)});const m=()=>{const t=[...e.selectedOptions].map(e=>e.dataset.index),n=[...r.options].map(e=>e.dataset.index);t.join("")!==n.join("")&&(e.querySelectorAll("option").forEach(e=>{n.includes(e.dataset.index)?e.selected=!0:e.selected=!1}),e.dispatchEvent(new Event("change")))}}
